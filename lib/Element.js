// Generated by CoffeeScript 1.3.3
(function() {
  var Element;

  Element = (function() {

    function Element() {
      this.d = {};
      switch (arguments.length) {
        case 1:
          this.d.keys = [];
          this.d.val = arguments[0];
          break;
        case 2:
          this.d.keys = arguments[0];
          this.d.val = arguments[1];
          break;
        case 3:
          this.d.pos = arguments[0];
          this.d.keys = arguments[1];
          this.d.val = arguments[2];
          break;
        default:
          throw new Error("Unknown quantity of arguments: " + arguments);
      }
      this.d.keys = this.d.keys.shift ? this.d.keys : [this.d.keys];
    }

    Element.prototype.keys = function() {
      return this.d.keys;
    };

    Element.prototype.value = function() {
      return this.d.val;
    };

    Element.prototype.position = function() {
      return this.d.pos;
    };

    Element.prototype.update_position = function(n) {
      return this.d.pos = n;
    };

    Element.prototype.to_array = function() {
      return [this.d.keys, this.d.val];
    };

    Element.prototype.remove_alias = function(alias) {
      var k;
      return this.d.keys = (function() {
        var _i, _len, _ref, _results;
        _ref = this.d.keys;
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          k = _ref[_i];
          if (k !== alias) {
            _results.push(k);
          }
        }
        return _results;
      }).call(this);
    };

    return Element;

  })();

  module.exports = Element;

}).call(this);
