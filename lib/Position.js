// Generated by CoffeeScript 1.3.3
(function() {
  var Position, forward, rw;

  rw = require('rw_ize');

  forward = require('forward_these_functions');

  Position = (function() {

    rw.ize(Position);

    forward(Position.prototype, "list");

    Position.read_able('list', 'position');

    function Position(list) {
      this.rw_data('list', list);
      if (this.list().is_empty()) {
        this.rw_data('position', 0);
      } else {
        this.rw_data('position', 1);
      }
    }

    Position.prototype.is_a_position = function() {
      return true;
    };

    Position.prototype.is_at_top = function() {
      if (this.list().is_empty()) {
        return this.position() === 0;
      } else {
        return this.position() === 1;
      }
    };

    Position.prototype.is_at_bottom = function() {
      if (this.list().is_empty()) {
        return this.position() === 0;
      } else {
        return this.position() === this.list().last_position();
      }
    };

    Position.prototype.downward = function(list) {
      if (this.position() === this.list().last_position()) {
        return this.value();
      }
      this.rw_data('position', this.list().position_after(this.position()));
      return this.value();
    };

    Position.prototype.forward = Position.prototype.downwward;

    Position.prototype.backward = Position.prototype.upward;

    return Position;

  })();

  module.exports = Position;

}).call(this);
